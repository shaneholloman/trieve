---
import TrieveLogo from "@assets/global/trieve-logo.png";
import Accordion from "@components/Accordion.astro";
import CallToAction from "@components/CallToAction.astro";
import KeystaticImage from "@components/KeystaticImage.astro";
import Tagline from "@components/Tagline.astro";
import Testimonials from "@components/Testimonials.astro";
import TrustedBrands from "@components/TrustedBrands.astro";
import Layout from "@layouts/Layout.astro";
import AnimatedBackground from "@layouts/shared/AnimatedBackground.astro";
import { getCollection } from "astro:content";
import { marked } from "marked";

export async function getStaticPaths() {
  const entries = await getCollection("comparisons");
  return entries.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;

const i18n = entry.data;
---

<Layout title={`Trieve vs. ${i18n.name} | Trieve`}>
  <section class="container mx-auto flex flex-col md:flex-row gap-4 md:gap-8">
    <div
      class="flex flex-col items-center md:items-start gap-4 md:flex-2/3 md:max-w-2/3 pt-2 md:pt-18 md:pb-6"
    >
      <Tagline>Trieve vs {i18n.name}</Tagline>
      <h1>{i18n.hero.title}</h1>
      <p class="my-2 text-lg">{i18n.hero.description}</p>
      <KeystaticImage
        class="md:hidden rounded-xl"
        src={i18n.hero?.image || undefined}
        alt=""
        widths={[320, 480, 540, 640]}
        sizes="calc(100vw - 4rem)"
        loading="eager"
      />
      <CallToAction actions={i18n.hero.overrideActions} />
    </div>

    <KeystaticImage
      class="hidden md:block flex-1/3 max-w-1/3 rounded-xl self-center"
      src={i18n.hero?.image || undefined}
      alt=""
      widths={[320, 480, 540, 640]}
      sizes="calc(33vw - 1rem)"
      loading="eager"
    />
  </section>
  <section>
    <TrustedBrands />
  </section>
  <section
    class="container not-visited:flex flex-col gap-4 items-center mb-8 md:mb-24"
  >
    <h2 class="text-5xl text-center" set:html={marked(i18n.sliders.title)} />
    <div class="flex flex-col lg:flex-row gap-4 mx-auto md:my-4">
      <div class="hidden lg:flex flex-col gap-1 p-4 pt-13">
        {i18n.sliders.items.map((i) => <div>{i.name}</div>)}
      </div>
      <div class="p-6 lg:px-5 lg:py-4 bg-primary-300 rounded-xl">
        <p class="text-lg font-semibold mb-2">
          <KeystaticImage
            src={TrieveLogo}
            class="h-8 w-auto relative -mt-1 mr-1 inline"
            widths={[42]}
            sizes="42px"
          />
          Trieve
        </p>

        <div class="flex flex-col gap-2 lg:gap-1">
          {
            i18n.sliders.items.map((i) => (
              <div class="flex flex-col gap-2">
                <div class="flex flex-row gap-4 lg:gap-2 items-center">
                  <div class="w-64 lg:w-48 h-6 lg:h-3 bg-primary-100 rounded-full">
                    <div
                      class=" h-full bg-primary-900 rounded-full"
                      style={{ width: `calc(${i.trieve} / 5 * 100%)` }}
                    >
                      <span class="lg:hidden text-white pl-3">{i.name}</span>
                    </div>
                  </div>
                  <span>{i.trieve}/5</span>
                </div>
              </div>
            ))
          }
        </div>
      </div>
      <div class="p-6 lg:px-5 lg:py-4 bg-primary-300 rounded-xl">
        <p class="text-lg font-semibold mb-2 h-7">{i18n.name}</p>

        <div class="flex flex-col gap-2 lg:gap-1">
          {
            i18n.sliders.items.map((i) => (
              <div class="flex flex-col gap-2">
                <div class="flex flex-row gap-4 lg:gap-2 items-center">
                  <div class="w-64 lg:w-48 h-6 lg:h-3 bg-primary-100 rounded-full">
                    <div
                      class=" h-full bg-zinc-500 lg:bg-zinc-400 rounded-full"
                      style={{ width: `calc(${i.other} / 5 * 100%)` }}
                    >
                      <span class="lg:hidden text-white pl-3">{i.name}</span>
                    </div>
                  </div>
                  <span>{i.other}/5</span>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>
  <section class="flex flex-col justify-center gap-4">
    {
      i18n.testimonialsTitle && (
        <h2
          class="container text-center text-5xl"
          set:html={marked(i18n.testimonialsTitle)}
        />
      )
    }
    <Testimonials />
  </section>
  <section class="container">
    <h2
      class="text-5xl text-center my-4 md:my-8"
      set:html={marked(i18n.accordion.title)}
    />
    <Accordion competitor={i18n.name} sections={i18n.accordion.sections} />
  </section>
  <section
    class="container flex flex-col items-center text-center rounded-xl md:px-8 my-12"
  >
    <h2
      class="text-balance text-5xl md:text-7xl font-medium"
      set:html={marked.parse(
        i18n.callToAction?.title || "Discover why you should\n\n*choose* Trieve"
      )}
    />
  </section>
  <div
    id="main-cta"
    class="sticky top-96 flex items-center justify-center -mt-16 md:mb-48 overflow-hidden transition-[bottom] -bottom-28 delay-100 ease-in mx-4 md:mx-auto"
    class:list={[{ "bottom-8": false }]}
  >
    <CallToAction
      withBackground
      withBorder
      actions={i18n.hero.overrideActions}
    />
  </div>
  <AnimatedBackground />
</Layout>
